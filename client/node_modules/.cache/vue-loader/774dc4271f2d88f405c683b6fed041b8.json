{"remainingRequest":"C:\\Users\\hp\\Desktop\\all\\WEB\\webapp_project\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\hp\\Desktop\\all\\WEB\\webapp_project\\client\\src\\views\\Events.vue?vue&type=template&id=5901bf53&","dependencies":[{"path":"C:\\Users\\hp\\Desktop\\all\\WEB\\webapp_project\\client\\src\\views\\Events.vue","mtime":1585414956105},{"path":"C:\\Users\\hp\\Desktop\\all\\WEB\\webapp_project\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Desktop\\all\\WEB\\webapp_project\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Desktop\\all\\WEB\\webapp_project\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\hp\\Desktop\\all\\WEB\\webapp_project\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}